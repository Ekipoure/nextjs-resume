{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import {\n  defineDocumentType,\n  defineNestedType,\n  makeSource,\n} from 'contentlayer2/source-files';\n\nexport const Personal = defineDocumentType(() => ({\n  name: 'Personal',\n  filePathPattern: 'personal.md',\n  isSingleton: true,\n  fields: {\n    givenName: {\n      type: 'string',\n      description: 'Your first name or given name',\n      required: true,\n    },\n    familyName: {\n      type: 'string',\n      description: 'Your last name or family name',\n      required: true,\n    },\n    title: {\n      type: 'string',\n      description: 'Your current job title or a short description of your goal',\n      required: true,\n    },\n    location: {\n      type: 'string',\n      description:\n        'Your general location of residence, not your personal address',\n      required: true,\n    },\n  },\n}));\n\nexport const Skill = defineDocumentType(() => ({\n  name: 'Skill',\n  filePathPattern: 'skills/*.md',\n  fields: {\n    title: {\n      type: 'string',\n      description: 'A name for the category of skills',\n      required: true,\n    },\n  },\n}));\n\nexport const ProfessionalTitle = defineNestedType(() => ({\n  name: 'ProfessionalTitle',\n  fields: {\n    title: {\n      type: 'string',\n      description: 'A title at this organization',\n      required: true,\n    },\n    startDate: {\n      type: 'string',\n      description: 'The year when you started the role',\n      required: true,\n    },\n    endDate: {\n      type: 'string',\n      description:\n        'The year when you ended the role, or empty if it is your current role',\n      required: false,\n    },\n    description: {\n      type: 'string',\n      description:\n        'A description of the work you did under this role, or your accomplishments that led to a promotion',\n      required: false,\n    },\n  },\n}));\n\nexport const ProfessionalExperience = defineDocumentType(() => ({\n  name: 'ProfessionalExperience',\n  filePathPattern: 'professional-experiences/*.md',\n  fields: {\n    organization: {\n      type: 'string',\n      description: 'The name of the company or organization you worked with',\n      required: true,\n    },\n    titles: {\n      type: 'list',\n      of: ProfessionalTitle,\n      required: true,\n    },\n  },\n}));\n\nexport const Achievement = defineDocumentType(() => ({\n  name: 'Achievement',\n  filePathPattern: 'achievements/*.md',\n  fields: {\n    achievement: {\n      type: 'string',\n      description:\n        'The name of the degree or certification of your achievement',\n      required: true,\n    },\n    organization: {\n      type: 'string',\n      description:\n        'The name of the school, organization, or program you earned your achievement from',\n      required: true,\n    },\n    completionYear: {\n      type: 'number',\n      description: 'The year you earned your achievement',\n      required: true,\n    },\n  },\n}));\n\nexport const AdditionalInfo = defineDocumentType(() => ({\n  name: 'AdditionalInfo',\n  filePathPattern: 'additional-info.md',\n  isSingleton: true,\n  fields: {\n    title: {\n      type: 'string',\n      description: 'The name of the additional info section',\n      required: true,\n    },\n  },\n}));\n\nexport const PrivateField = defineDocumentType(() => ({\n  name: 'PrivateField',\n  filePathPattern: 'private-fields/*.md',\n  fields: {\n    label: {\n      type: 'string',\n      description: 'A label to describe the private field',\n      required: true,\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: 'edit-me/content',\n  documentTypes: [\n    Personal,\n    Skill,\n    ProfessionalExperience,\n    Achievement,\n    AdditionalInfo,\n    PrivateField,\n  ],\n});\n"],
  "mappings": ";AAAA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,OACK;AAEA,IAAM,WAAW,mBAAmB,OAAO;AAAA,EAChD,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,WAAW;AAAA,MACT,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,aACE;AAAA,MACF,UAAU;AAAA,IACZ;AAAA,EACF;AACF,EAAE;AAEK,IAAM,QAAQ,mBAAmB,OAAO;AAAA,EAC7C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AACF,EAAE;AAEK,IAAM,oBAAoB,iBAAiB,OAAO;AAAA,EACvD,MAAM;AAAA,EACN,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,aACE;AAAA,MACF,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,aACE;AAAA,MACF,UAAU;AAAA,IACZ;AAAA,EACF;AACF,EAAE;AAEK,IAAM,yBAAyB,mBAAmB,OAAO;AAAA,EAC9D,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,IAAI;AAAA,MACJ,UAAU;AAAA,IACZ;AAAA,EACF;AACF,EAAE;AAEK,IAAM,cAAc,mBAAmB,OAAO;AAAA,EACnD,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,aAAa;AAAA,MACX,MAAM;AAAA,MACN,aACE;AAAA,MACF,UAAU;AAAA,IACZ;AAAA,IACA,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,aACE;AAAA,MACF,UAAU;AAAA,IACZ;AAAA,IACA,gBAAgB;AAAA,MACd,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AACF,EAAE;AAEK,IAAM,iBAAiB,mBAAmB,OAAO;AAAA,EACtD,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AACF,EAAE;AAEK,IAAM,eAAe,mBAAmB,OAAO;AAAA,EACpD,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF,CAAC;",
  "names": []
}
